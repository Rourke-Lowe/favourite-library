{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-06-24 09:43:35.845"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-06-24 09:43:35.846"}
{"arguments":{"url":"http://localhost:3000"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:06.283","tool":"puppeteer_navigate"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:06.284"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:10.167"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:10.167","url":"http://localhost:3000"}
{"error":"net::ERR_CONNECTION_REFUSED at http://localhost:3000","level":"error","message":"Navigation failed","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:10.173","url":"http://localhost:3000"}
{"arguments":{"targetUrl":"http://localhost:3000"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:49:18.135","tool":"puppeteer_connect_active_tab"}
{"arguments":{"debugPort":9222},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:41.751","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:41.769","wsEndpoint":"ws://localhost:9222/devtools/browser/fe0256e6-8133-4459-9ea4-0246153f9157"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:41.770"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:41.778"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:41.789","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3000"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:45.484","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-06-24 09:53:45.484","url":"http://localhost:3000"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-06-24 09:53:49.310","url":"http://localhost:3000"}
{"arguments":{"script":"// Set viewport to mobile size\nwindow.innerWidth = 375;\nwindow.innerHeight = 667;\ndocument.documentElement.style.width = '375px';\ndocument.documentElement.style.height = '667px';\n\n// Force a resize event\nwindow.dispatchEvent(new Event('resize'));\n\n// Return current viewport size\nJSON.stringify({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  devicePixelRatio: window.devicePixelRatio\n})"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:03.234","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":401,"service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:03.234"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:03.236"}
{"arguments":{"height":800,"name":"desktop-view-initial","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:11.007","tool":"puppeteer_screenshot"}
{"arguments":{"height":667,"name":"mobile-view-english","width":375},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:19.878","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"a[href*=\"FR\"], button:has-text(\"FR\"), *[text()=\"FR\"]"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:27.781","tool":"puppeteer_click"}
{"arguments":{"script":"// Find all links and buttons that might be language switchers\nconst links = Array.from(document.querySelectorAll('a, button'));\nconst frElements = links.filter(el => \n  el.textContent.includes('FR') || \n  el.href?.includes('FR') ||\n  el.getAttribute('aria-label')?.includes('FR')\n);\n\n// Return information about potential language switchers\nfrElements.map(el => ({\n  tag: el.tagName,\n  text: el.textContent.trim(),\n  href: el.href || null,\n  className: el.className,\n  id: el.id || null,\n  selector: el.tagName.toLowerCase() + \n    (el.id ? '#' + el.id : '') + \n    (el.className ? '.' + el.className.split(' ').join('.') : '')\n}))"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:38.378","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":632,"service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:38.379"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:38.380"}
{"arguments":{"script":"// Get all navigation elements\nconst navElements = document.querySelectorAll('nav a, header a, a');\nconst result = [];\n\nnavElements.forEach((el, index) => {\n  result.push({\n    index: index,\n    text: el.textContent.trim(),\n    href: el.href,\n    className: el.className\n  });\n});\n\nJSON.stringify(result.slice(0, 10)); // First 10 elements"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:45.726","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":339,"service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:45.726"}
{"error":"Unexpected token 'catch'","level":"error","message":"Script evaluation failed","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:45.729"}
{"arguments":{"script":"document.querySelector('a[href=\"/fr\"]')?.click() || document.querySelector('a:contains(\"FR\")')?.click() || (() => {\n  const links = Array.from(document.querySelectorAll('a'));\n  const frLink = links.find(a => a.textContent.trim() === 'FR');\n  if (frLink) frLink.click();\n  return frLink ? 'Clicked FR' : 'FR link not found';\n})()"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:52.751","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":329,"service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:52.751"}
{"hasResult":true,"level":"debug","logCount":1,"message":"Script execution result","resultType":"object","service":"mcp-puppeteer","timestamp":"2025-06-24 09:54:52.754"}
{"arguments":{"script":"// Find and click the language switcher\nconst languageSwitcher = document.querySelector('[aria-label*=\"language\"]') || \n                        document.querySelector('button:has(svg)') ||\n                        document.querySelector('button[class*=\"language\"]') ||\n                        document.querySelector('div[class*=\"language\"] button');\nif (languageSwitcher) {\n  languageSwitcher.click();\n  return 'Clicked language switcher';\n}\nreturn 'Language switcher not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:55:24.268","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":478,"service":"mcp-puppeteer","timestamp":"2025-06-24 09:55:24.269"}
{"hasResult":true,"level":"debug","logCount":9,"message":"Script execution result","resultType":"string","service":"mcp-puppeteer","timestamp":"2025-06-24 09:55:24.281"}
{"arguments":{"height":667,"name":"mobile-view-french","width":375},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-06-24 09:55:30.835","tool":"puppeteer_screenshot"}
{"level":"info","message":"Puppeteer MCP Server closing","service":"mcp-puppeteer","timestamp":"2025-06-24 10:09:08.344"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-06-24 10:09:11.663"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-06-24 10:09:11.664"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-06-24 10:38:49.939"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-06-24 10:38:49.940"}
